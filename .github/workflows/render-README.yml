on:
  push:
    paths:
      - README.Rmd

name: Render README

jobs:
  render:
    name: Render README
    
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
          
      - name: Install dependencies
        run: |
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'
          Rscript -e 'install.packages(c("dplyr", "magrittr", "rvest", "xml2"))'
      
      - name: Install SoilKnowledgeBase
        run: |
          cd ..
          R CMD build SoilKnowledgeBase
          R CMD INSTALL SoilKnowledgeBase
          cd SoilKnowledgeBase/
        
      - name: Install Rmarkdown
        run: Rscript -e 'install.packages("rmarkdown")'
        
      - name: Render README
        run: Rscript -e 'rmarkdown::render("README.Rmd")'
        
      - name: Commit results
        run: |
          git commit README.md -m 'Render README.Rmd' || echo "No changes to commit"
          git push origin || echo "No changes to commit"

